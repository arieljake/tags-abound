
var mongo = require("mongodb");
var userValidate = require('./userValidate');
var util = require('util');

var UserDAO = module.exports.UserDAO = function (db)
{
	var self = this;
	
	this.db = db;

	this.findUserById = function(id,callback)
	{
		var userId = new mongo.ObjectID(id);

		self.db.collection("v1_user").find({_id: userId},{limit: 1}).toArray(function (err,items)
		{
			callback(items[0]);
		});
	};

	this.findUserByLogin = function (login,callback)
	{
		self.db.collection("v1_user").find({username: login.username, password: login.password},{limit: 1}).toArray(function (err,items)
		{
			callback(items.length === 1 ? items[0] : null);
		});
	};

	this.createUser = function (user,callback)
	{
		self.db.collection("v1_user").find({username: user.username},{username: 1},{limit: 1}).toArray(function (err,items)
		{
			if (items.length === 0)
			{
				var createUser = userValidate.prepareForCreate(user);

				self.db.collection("v1_user").insert(createUser,function (err,items)
				{
					self.db.collection("v1_user").find({username: createUser.username}).toArray(function (err,items)
					{
						if (err || items.length != 1)
						{
							callback(null,util.inspect(err,false,2,false));
						}
						else
						{
							callback(items[0],null);
						}
					});
				});
			}
			else
			{
				callback(null,"that username is already being used");
			}
		});
	};

	this.updateUser = function(id,user,callback)
	{
		var userId = new mongo.ObjectID(id);

		self.db.collection("v1_user").find({_id: userId}).toArray(function (err,items)
		{
			if (items.length == 1)
			{
				var savedUser = items[0];
				var updateUser = userValidate.prepareForUpdate(user,savedUser);

				if (updateUser != null)
				{
					self.db.collection("v1_user").updateById(userId, updateUser, function (err,users)
					{
						callback(user);
					});
				}
				else
				{
					callback(null);
				}
			}
		});
	};

	this.updateUserPassword = function(id,user,callback)
	{
		var userId = new mongo.ObjectID(id);

		self.db.collection("v1_user").find({_id: userId}).toArray(function (err,items)
		{
			if (items.length == 1)
			{
				var savedUser = items[0];
				var newUser = userValidate.prepareForUpdatePassword(user,savedUser);

				if (newUser != null)
				{
					self.db.collection("v1_user").updateById(userId, newUser, function (err,users)
					{
						callback(user);
					});
				}
				else
				{
					callback(null);
				}
			}
		});
	};	
};