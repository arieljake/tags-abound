var listly = require('listly');

var SubmissionREST = module.exports.SubmissionREST = function (listlyServer)
{
	this.submissionDAO = listlyServer.submissionDAO;
	this.listlyMessageService = listlyServer.listlyMessageService;
};

SubmissionREST.prototype.getAllSubmissions = function (req, res)
{
	this.submissionDAO.findAllSubmissions(function (items)
	{
		listly.renderUtils.resultJSONP(req, res, items);
	});
};

SubmissionREST.prototype.getSubmissionById = function (idParamName)
{
	return function (req, res)
	{
		var submissionId = req.params[idParamName];

		this.submissionDAO.findSubmissionById(submissionId, function (item)
		{
			listly.renderUtils.resultJSONP(req, res, item);
		});
	};
};

SubmissionREST.prototype.getSubmissionListsById = function (idParamName)
{
	return function (req, res)
	{
		var submissionId = req.params[idParamName];

		this.submissionDAO.findSubmissionListsById(submissionId, function (lists)
		{
			listly.renderUtils.resultJSONP(req, res, lists);
		});
	};
};

SubmissionREST.prototype.getSubmissionsByTitle = function (titleParamName)
{
	return function (req, res)
	{
		var title = req.params[titleParamName];

		this.submissionDAO.findSubmissionsByTitle(title, function (items)
		{
			listly.renderUtils.resultJSONP(req, res, items);
		});
	};
};

SubmissionREST.prototype.createSubmission = function (req, res)
{
	var self = this;
	var submission = req.body;

	submission.username = req.session.username;
	delete submission._id;

	this.submissionDAO.createSubmission(submission, function (err)
	{
		self.listlyMessageService.handleNewSubmission(submission);

		listly.renderUtils.resultJSONP(req, res, submission);
	});
};

SubmissionREST.prototype.updateSubmission = function (idParamName)
{
	var self = this;

	return function (req, res)
	{
		var submission = req.body;
		var submissionId = req.params[idParamName];

		delete submission._id;

		self.submissionDAO.updateSubmissionById(submissionId, submission, function (err)
		{
			listly.renderUtils.resultJSONP(req, res, submission);
		});
	};
};