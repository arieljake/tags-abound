
var listly = require('listly');

var SubmissionREST = module.exports.SubmissionREST = function (listlyServer)
{
	this.submissionDAO = listlyServer.submissionDAO;
	this.listlyMessageService = listlyServer.listlyMessageService;
};

SubmissionREST.prototype.getAllSubmissions = function (req,res)
{
	this.submissionDAO.findAllSubmissions(function(items)
	{
		res.send(listly.renderUtils.outputJSONP(req,items));
	});
};

SubmissionREST.prototype.getSubmissionById = function (idParamName)
{
	return function (req,res)
	{
		var submissionId = req.params[idParamName];

		this.submissionDAO.findSubmissionById(submissionId,function(item)
		{
			res.send(listly.renderUtils.outputJSONP(req,item));
		});
	};
};

SubmissionREST.prototype.getSubmissionListsById = function (idParamName)
{
	return function (req,res)
	{
		var submissionId = req.params[idParamName];

		this.submissionDAO.findSubmissionListsById(submissionId,function (lists)
		{
			res.send(listly.renderUtils.outputJSONP(req,lists));
		});
	};
};

SubmissionREST.prototype.getSubmissionsByTitle = function (titleParamName)
{
	return function (req,res)
	{
		var title = req.params[titleParamName];

		this.submissionDAO.findSubmissionsByTitle(title,function(items)
		{
			res.send(listly.renderUtils.outputJSONP(req,items));
		});
	};
};

SubmissionREST.prototype.saveSubmission = function (req,res)
{
	var self = this;
	var submission = req.body;
	var id = submission._id ? submission._id : undefined;

	submission.username = req.session.username;

	if (id === undefined)
	{
		this.submissionDAO.createSubmission(submission,function(err)
		{
			self.listlyMessageService.handleNewSubmission(submission);

			res.send(listly.renderUtils.outputJSONP(req,submission));
		});
	}
	else
	{
		this.submissionDAO.updateSubmission(id,submission,function(err)
		{
			res.send(listly.renderUtils.outputJSONP(req,submission));
		});
	}
};