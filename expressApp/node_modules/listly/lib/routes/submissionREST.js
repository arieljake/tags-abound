
var listly = require('listly');

var SubmissionREST = module.exports.SubmissionREST = function (listlyServer)
{
	this.submissionDAO = listlyServer.submissionDAO;

	var app = listlyServer.app;
	app.get('/submissions', listly.utils.routeHandler(this,this.getAllSubmissions));
	app.get('/submission/:submissionId', listly.utils.routeHandler(this,this.getSubmissionById("submissionId")));
	app.get('/submission/:submissionId/lists', listly.utils.routeHandler(this,this.getSubmissionListsById("submissionId")));
	app.get('/submission/title/:submissionTitle', listly.utils.routeHandler(this,this.getSubmissionsByTitle("submissionTitle")));
	app.post('/submission', listly.utils.routeHandler(this,this.saveSubmission));
};

SubmissionREST.prototype.getAllSubmissions = function (req,res)
{
	this.submissionDAO.findAllSubmissions(function(items)
	{
		res.setHeader("Content-Type","application/json");
		res.send(items);
	});
};

SubmissionREST.prototype.getSubmissionById = function (idParamName)
{
	return function (req,res)
	{
		var submissionId = req.params[idParamName];

		this.submissionDAO.findSubmissionById(submissionId,function(item)
		{
			res.setHeader("Content-Type","application/json");
			res.send(item);
		});
	};
};

SubmissionREST.prototype.getSubmissionListsById = function (idParamName)
{
	return function (req,res)
	{
		var submissionId = req.params[idParamName];

		this.submissionDAO.findSubmissionListsById(submissionId,function (lists)
		{
			res.setHeader("Content-Type","application/json");
			res.send(lists);
		});
	};
};

SubmissionREST.prototype.getSubmissionsByTitle = function (titleParamName)
{
	return function (req,res)
	{
		var title = req.params[titleParamName];

		this.submissionDAO.findSubmissionsByTitle(title,function(items)
		{
			res.setHeader("Content-Type","application/json");
			res.send(items);
		});
	};
};

SubmissionREST.prototype.saveSubmission = function (req,res)
{
	var submission = req.body;
	var id = submission._id ? submission._id : undefined;

	submission.username = req.session.username;

	if (id === undefined)
	{
		this.submissionDAO.createSubmission(submission,function(submission)
		{
			res.setHeader("Content-Type","application/json");
			res.send(submission);
		});
	}
	else
	{
		this.submissionDAO.updateSubmission(id,submission,function(submission)
		{
			res.setHeader("Content-Type","application/json");
			res.send(submission);
		});
	}
};