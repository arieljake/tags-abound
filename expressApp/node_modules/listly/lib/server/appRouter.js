

var listly = require('listly');

var ListlyAppRouter = module.exports.ListlyAppRouter = function (listlyServer)
{
	var self = this;

	this.app = listlyServer.app;
	this.rewriter = listlyServer.rewriter;

	this.loginRoutes = new listly.LoginRoutes(listlyServer);
	this.loginREST = new listly.LoginREST(listlyServer);
	this.submissionRoutes = new listly.SubmissionRoutes(listlyServer);
	this.listRoutes = new listly.ListRoutes(listlyServer);
	this.userRoutes = new listly.UserRoutes(listlyServer);
	this.utilRoutes = new listly.UtilRoutes(listlyServer);

	/**
	 * VIEWS
	 */

	// Aliases
	this.app.get('/', this.rewriter.rewrite('/views/user/home'));
	this.app.get('/views/lists/index/:listId', this.rewriter.rewrite('/views/lists/#/list/$1'));
	this.app.get('/views/submissions/index/:submissionId', this.rewriter.rewrite('/views/submissions/#/submission/$1'));

	// listRoutes
	this.app.get('/views/lists', listly.utils.routeHandler(this.listRoutes,this.listRoutes.index));
	this.app.get('/views/lists/list', listly.utils.routeHandler(this.listRoutes,this.listRoutes.list));
	this.app.get('/views/lists/detail', listly.utils.routeHandler(this.listRoutes,this.listRoutes.detail));

	// loginRoutes
	this.app.get('/views/login', listly.utils.routeHandler(this.loginRoutes,this.loginRoutes.index));
	this.app.get('/views/register', listly.utils.routeHandler(this.loginRoutes,this.loginRoutes.registerRedirect));
	this.app.get('/views/login/login', listly.utils.routeHandler(this.loginRoutes,this.loginRoutes.login));
	this.app.get('/views/login/register', listly.utils.routeHandler(this.loginRoutes,this.loginRoutes.register));

	// submissionRoutes
	this.app.get('/views/submissions', listly.utils.routeHandler(this.submissionRoutes,this.submissionRoutes.index));
	this.app.get('/views/submissions/list', listly.utils.routeHandler(this.submissionRoutes,this.submissionRoutes.list));
	this.app.get('/views/submissions/detail', listly.utils.routeHandler(this.submissionRoutes,this.submissionRoutes.detail));
	this.app.get('/views/submissions/edit', listly.utils.routeHandler(this.submissionRoutes,this.submissionRoutes.edit));

	// userRoutes
	this.app.get('/views/user', listly.utils.routeHandler(this.userRoutes,this.userRoutes.index));
	this.app.get('/views/user/edit', listly.utils.routeHandler(this.userRoutes,this.userRoutes.edit));
	this.app.get('/views/user/home', listly.utils.routeHandler(this.userRoutes,this.userRoutes.home));
	this.app.get('/views/user/home/main', listly.utils.routeHandler(this.userRoutes,this.userRoutes.homeMain));
	this.app.get('/@:username', listly.utils.routeHandler(this.userRoutes,this.userRoutes.profile));
	this.app.get('/views/user/profile/view', listly.utils.routeHandler(this,this.renderDefaultViewPartial));

	// utilRoutes
	this.app.get('/ping', listly.utils.routeHandler(this.utilRoutes,this.utilRoutes.doPing));
	this.app.get('/views/logger', listly.utils.routeHandler(this.utilRoutes,this.utilRoutes.viewLogger));
	this.app.get('/fxn/mapReduce', listly.utils.routeHandler(this.utilRoutes,this.utilRoutes.performMapReduce));

	// loginREST
	this.app.post('/doLogin', listly.utils.routeHandler(this.loginREST,this.loginREST.doLogin));
	this.app.post('/doRegister', listly.utils.routeHandler(this.loginREST,this.loginREST.doRegister));
	this.app.get('/logout', listly.utils.routeHandler(this.loginREST,this.loginREST.doLogout));
};

ListlyAppRouter.prototype.renderDefaultViewPartial = function (req,res)
{
	res.render(req.url.replace(/^\/views\//,''), listly.renderUtils.params(req,{layout: false}));
};