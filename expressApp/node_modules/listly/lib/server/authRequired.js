
var url = require('url');

var _enabled = true;
var _registerEnabled = false;

module.exports = function(enabled,registerEnabled)
{
	_enabled = (enabled == undefined) ? _enabled : enabled;
	_registerEnabled = (registerEnabled == undefined) ? _registerEnabled : registerEnabled;

	return function (req,res,next)
	{
		if (!_enabled || req.session.username !== undefined)
		{
			next();
		}
		else
		{
			var pathname = url.parse(req.url).pathname;

			if (pathname.indexOf("/stylesheets") == 0 || pathname.indexOf("/javascripts") == 0 || pathname == "/favicon.ico"
				|| pathname == "/login" || pathname.indexOf("/views/login") == 0 || pathname == "/doLogin")
			{
				next();
			}
			else
			{
				if (_registerEnabled &&
					pathname == "/register" || pathname.indexOf("/views/register") == 0 || pathname == "/doRegister")
				{
					next();
				}
				else
				{
					/**
					 * HTTP1.1 Status Code Definitions
					 * http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html
					 *
					 * 302
					 *
					 * The requested resource resides temporarily under a different URI. Since the redirection might be
					 * altered on occasion, the client SHOULD continue to use the Request-URI for future requests.
					 * This response is only cacheable if indicated by a Cache-Control or Expires header field.
					 *
					 * The temporary URI SHOULD be given by the Location field in the response.
					 * Unless the request method was HEAD, the entity of the response SHOULD contain a short hypertext
					 * note with a hyperlink to the new URI(s).
					 */
					res.redirect('/login',302);
				}
			}
		}
	};
};