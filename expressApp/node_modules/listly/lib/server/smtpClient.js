
var smtp = require('simplesmtp');
var MailComposer = require('mailcomposer').MailComposer;

module.exports.createSmtpClient = function ()
{
	return new ListlySmtpClient();
};

function ListlySmtpClient(smtpClient)
{
	var self = this;

	this.smtpClientPool = smtp.createClientPool(25,"localhost");

//	this.smtpClient = smtp.connect(25,"localhost");
//	this.smtpClient.on("idle", self.handleIdle);
//	this.smtpClient.on("message", self.handleMessage);
//	this.smtpClient.on("ready", self.handleReady);
//	this.smtpClient.on("rcptFailed", self.handleReceiptFailed);
//	this.smtpClient.on("error", self.handleError);
//	this.smtpClient.on("end", self.handleEnd);
};

ListlySmtpClient.prototype.sendMessage = function(to, body, callback)
{
	var mail = new MailComposer();
	mail.addHeader("x-mailer", "Nodemailer 1.0");
	mail.setMessageOption({
		to: to,
		body: body
	});

	this.smtpClientPool.sendMail(mail, callback);
};

/**
 * 'idle' - the connection to the SMTP server has been successfully set up and the client is waiting for an envelope
 */
ListlySmtpClient.prototype.handleIdle = function()
{

};

/**
 * 'message' - the envelope is passed successfully to the server and a message stream can be started
 */
ListlySmtpClient.prototype.handleMessage = function()
{

};

/**
 * 'ready' (success) - the message was sent
 */
ListlySmtpClient.prototype.handleReady = function(success)
{

};

/**
 * 'rcptFailed' (addresses) - not all recipients were accepted (invalid addresses are included as an array)
 */
ListlySmtpClient.prototype.handleReceiptFailed = function(addresses)
{

};

/**
 * 'error' (err) - An error occurred. The connection is closed and an 'end' event is emitted shortly
 */
ListlySmtpClient.prototype.handleError = function(err)
{

};

/**
 * 'end' - connection to the client is closed
 */
ListlySmtpClient.prototype.handleEnd = function()
{

};