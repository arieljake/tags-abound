var submission_byTag_map = function ()
{
	if (this.tags !== undefined)
	{
		var itemTags = this.tags.split(",");

		while (itemTags.length > 0)
		{
			var tag = itemTags.pop();
			emit(tag,{name: tag, count: 1, usages: [{title: this.title, id: this._id}]});
		}
	}
};

var submission_byTag_reduce = function(key, values)
{
	var results = {name: key, count: 0, usages: []};

	for (var i=0; i < values.length; i++)
	{
		var value = values[i];
		results.count = results.count + value.count;
		results.usages = results.usages.concat(value.usages);
	}

	return results;
};

module.exports.submission_byTag = {
	mapreduce: "v1_submission",
	out: "v1_submission_tagLists",
	map: submission_byTag_map.toString(),
	reduce: submission_byTag_reduce.toString()
};

var byTag_minCount_map = function ()
{
	if (this.value.count >= 3)
		emit(this._id,this.value);
};

var byTag_minCount_reduce = function(key, values)
{
	return values;
};

module.exports.byTag_minCount = {
	mapreduce: "v1_submission_tagLists",
	out: "v1_list",
	map: byTag_minCount_map.toString(),
	reduce: byTag_minCount_reduce.toString()
};